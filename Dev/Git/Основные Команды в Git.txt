Git — Стандартный Рабочий Процесс.

Git — это система контроля версий (СКВ), которая позволяет отслеживать изменения в проекте с течением времени. Git записывает все изменения, которые были сделаны вами в проекте, хранит информацию об этих изменениях и позволяет как угодно эту информацию использовать.
Из данной статьи вы узнаете что из себя представляет стандартный рабочий процесс с использованием Git, а также основные команды в Git для ежедневного использования.

Стандартный Рабочий Процесс с Git 
Стандартный рабочий процесс с использованием Git выглядит примерно так:
1. После создания Git Репозитория, вся работа происходить в Рабочем Каталоге
2. Когда проделанная вами работа достигает какой-то важной отметки (например вы пофиксили баг или закончился рабочий день), вы добавляете ваши изменения в Индекс (так называемая ‘область подготовленных файлов’ или ‘staging area’)
3. Как только в индексе находятся все изменения которые вы намереваетесь сохранить, вы делаете коммит, который перемещает файлы из индекса в Git
Репозиторий на постоянное хранение.

Проект в Git можно рассматривать, как состоящий из 3 частей:

-----------------------------------------------------------------
|  Часть	|		Описание			|
-----------------------------------------------------------------
|  Рабочий	|  Где вы делаете всю работу: создаете,		|
|  Каталог	|  редактируете, удаляете и организовываете	|
|		|  файлы					|
-----------------------------------------------------------------
|  Индекс 	|  Где вы отмечаете какие изменения, сделанные	|
|		|  вами в рабочем каталоге, следует сохранить	|
-----------------------------------------------------------------
|  Git		|  Где Git на постоянной основе хранит эти	|
|  Репозиторий	|  изменения в виде различных версий вашего	|
|		|  проекта					|
-----------------------------------------------------------------

Создать Новый Git Репозиторий
Откройте папку с существующим проектом либо создайте новую папку и выполните следующую команду внутри нее для создания нового Git репозитория:

git init

Эта команда создает суб-директорию .git в корне проекта, которая содержит метаданные необходимы для работы Git.

Проверить Состояние Git Репозитория

Проверить текущее состояние Git репозитория:

git status

Данная команда является основным инструментом, который помогает определить какие файлы находятся в каком состоянии (какие уже находятся в индексе, а какие не
добавлены и поэтому не отслеживаются).

Что, по сути, означает статус «Untracked»? Не отслеживаемый — означает что Git видит файл, но еще не начал отслеживать какие-либо изменения в нем. Чтобы Git
стал отслеживать изменения, необходимо чтобы файл был добавлен в индекс.

Добавить Файл в Индекс в Git

Выполните следующую команду, чтобы Git начал отслеживать изменения в файле (добавил в индекс):

git add <имя_файла>

Чтобы добавить в индекс все файлы, выполните:

git add .

Показать Изменения в Git

Когда состояние файлов отслеживается, мы можем просмотреть изменения между рабочим каталогом и индексом:

Чтобы показать изменения, выполните:

git diff

Чтобы просмотреть как был изменен конкретный файл, выполните:

git diff <имя_файла>

Сохранить Изменения в Git

Так что же делает коммит? Коммит на постоянной основе сохраняет изменения
из индекса внутри репозитория.

Коммит — это завершающий шаг в рабочем процессе с использованием Git.

Сохранить все изменения из индекса:

git commit -m "Краткое описание"

Сделать коммит только определенного файла:

git commit -m "Краткое описание" <имя_файла>
Стандартные правила при составлении описания коммита в Git:
Должно браться в кавычки
Должно быть написано в настоящем времени
Должно быть кратким (не более 50-ти символов)

Посмотреть Историю Коммитов
Показать историю коммитов сделанных в Git репозитории:
git log

Основные Команды в Git
Подводя итог вышесказанному, вот основные команды в Git для ежедневного
использования:

-----------------------------------------------------------------
|  Команда	|		Описание			|
-----------------------------------------------------------------
|  git init	|  Создать новый Git Репозиторий 		|
-----------------------------------------------------------------
|  git status	|  Показать состояние содержимого рабочего	|
|  Команда	|  каталога и индекса				|
-----------------------------------------------------------------
|  git add	|  Добавить файлы из рабочего каталога в индекс	|
-----------------------------------------------------------------
|  git diff	|  Показать изменения между рабочим		|
|		|  каталогом и индексом				|
-----------------------------------------------------------------
|  git commit	|  На постоянной основе сохранить все изменения	|
|		|  из индекса в репозиторий			|
-----------------------------------------------------------------
|  git log	|  Показать список всех предыдущих коммитов	|
-----------------------------------------------------------------

